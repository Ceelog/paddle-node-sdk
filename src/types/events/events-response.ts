/**
 *  ! Autogenerated code !
 *  Do not make changes to this file.
 *  Changes may be overwritten as part of auto-generation.
 */

import { type IAddressResponse } from '../address';
import { type IBusinessResponse } from '../business';
import { type EventName } from '../../notifications';
import { type IAdjustmentResponse } from '../adjustment';
import { type ICustomerResponse } from '../customer';
import { type IDiscountResponse } from '../discount';
import { type IPriceResponse } from '../price';
import { type IProductResponse } from '../product';
import { type ISubscriptionNotificationResponse } from '../subscription';
import { type ITransactionResponse } from '../transaction';
import { type IPayoutResponse } from '../payout';
import { type IReportResponse } from '../report';

export interface IEventsResponse<T = object> {
  event_id: string;
  notification_id: string;
  event_type: string;
  occurred_at: string;
  data: T;
}

interface IAddressCreated extends IEventsResponse<IAddressResponse> {
  event_type: EventName.AddressCreated;
}

interface IAddressUpdated extends IEventsResponse<IAddressResponse> {
  event_type: EventName.AddressUpdated;
}

interface IAddressImported extends IEventsResponse<IAddressResponse> {
  event_type: EventName.AddressImported;
}

interface IAdjustmentCreated extends IEventsResponse<IAdjustmentResponse> {
  event_type: EventName.AdjustmentCreated;
}

interface IAdjustmentUpdated extends IEventsResponse<IAdjustmentResponse> {
  event_type: EventName.AdjustmentUpdated;
}

interface IBusinessCreated extends IEventsResponse<IBusinessResponse> {
  event_type: EventName.BusinessCreated;
}

interface IBusinessUpdated extends IEventsResponse<IBusinessResponse> {
  event_type: EventName.BusinessUpdated;
}

interface IBusinessImported extends IEventsResponse<IBusinessResponse> {
  event_type: EventName.BusinessImported;
}

interface ICustomerCreated extends IEventsResponse<ICustomerResponse> {
  event_type: EventName.CustomerCreated;
}

interface ICustomerUpdated extends IEventsResponse<ICustomerResponse> {
  event_type: EventName.CustomerUpdated;
}

interface ICustomerImported extends IEventsResponse<ICustomerResponse> {
  event_type: EventName.CustomerImported;
}

interface IDiscountCreated extends IEventsResponse<IDiscountResponse> {
  event_type: EventName.DiscountCreated;
}

interface IDiscountUpdated extends IEventsResponse<IDiscountResponse> {
  event_type: EventName.DiscountUpdated;
}

interface IDiscountImported extends IEventsResponse<IDiscountResponse> {
  event_type: EventName.DiscountImported;
}

interface IPayoutCreated extends IEventsResponse<IPayoutResponse> {
  event_type: EventName.PayoutCreated;
}

interface IPayoutPaid extends IEventsResponse<IPayoutResponse> {
  event_type: EventName.PayoutPaid;
}

interface IPriceCreated extends IEventsResponse<IPriceResponse> {
  event_type: EventName.PriceCreated;
}

interface IPriceUpdated extends IEventsResponse<IPriceResponse> {
  event_type: EventName.PriceUpdated;
}

interface IPriceImported extends IEventsResponse<IPriceResponse> {
  event_type: EventName.PriceImported;
}

interface IProductCreated extends IEventsResponse<IProductResponse> {
  event_type: EventName.ProductCreated;
}

interface IProductUpdated extends IEventsResponse<IProductResponse> {
  event_type: EventName.ProductUpdated;
}

interface IProductImported extends IEventsResponse<IProductResponse> {
  event_type: EventName.ProductImported;
}

interface ISubscriptionActivated extends IEventsResponse<ISubscriptionNotificationResponse> {
  event_type: EventName.SubscriptionActivated;
}

interface ISubscriptionCanceled extends IEventsResponse<ISubscriptionNotificationResponse> {
  event_type: EventName.SubscriptionCanceled;
}

interface ISubscriptionCreated extends IEventsResponse<ISubscriptionNotificationResponse> {
  event_type: EventName.SubscriptionCreated;
}

interface ISubscriptionImported extends IEventsResponse<ISubscriptionNotificationResponse> {
  event_type: EventName.SubscriptionImported;
}

interface ISubscriptionPastDue extends IEventsResponse<ISubscriptionNotificationResponse> {
  event_type: EventName.SubscriptionPastDue;
}

interface ISubscriptionPaused extends IEventsResponse<ISubscriptionNotificationResponse> {
  event_type: EventName.SubscriptionPaused;
}

interface ISubscriptionResumed extends IEventsResponse<ISubscriptionNotificationResponse> {
  event_type: EventName.SubscriptionResumed;
}

interface ISubscriptionTrialing extends IEventsResponse<ISubscriptionNotificationResponse> {
  event_type: EventName.SubscriptionTrialing;
}

interface ISubscriptionUpdated extends IEventsResponse<ISubscriptionNotificationResponse> {
  event_type: EventName.SubscriptionUpdated;
}

interface ITransactionBilled extends IEventsResponse<ITransactionResponse> {
  event_type: EventName.TransactionBilled;
}

interface ITransactionCanceled extends IEventsResponse<ITransactionResponse> {
  event_type: EventName.TransactionCanceled;
}

interface ITransactionCompleted extends IEventsResponse<ITransactionResponse> {
  event_type: EventName.TransactionCompleted;
}

interface ITransactionCreated extends IEventsResponse<ITransactionResponse> {
  event_type: EventName.TransactionCreated;
}

interface ITransactionPaid extends IEventsResponse<ITransactionResponse> {
  event_type: EventName.TransactionPaid;
}

interface ITransactionPastDue extends IEventsResponse<ITransactionResponse> {
  event_type: EventName.TransactionPastDue;
}

interface ITransactionPaymentFailed extends IEventsResponse<ITransactionResponse> {
  event_type: EventName.TransactionPaymentFailed;
}

interface ITransactionReady extends IEventsResponse<ITransactionResponse> {
  event_type: EventName.TransactionReady;
}

interface ITransactionUpdated extends IEventsResponse<ITransactionResponse> {
  event_type: EventName.TransactionUpdated;
}

interface IReportCreated extends IEventsResponse<IReportResponse> {
  event_type: EventName.ReportCreated;
}

interface IReportUpdated extends IEventsResponse<IReportResponse> {
  event_type: EventName.ReportUpdated;
}

export type IEvents =
  | IAddressCreated
  | IAddressUpdated
  | IAddressImported
  | IAdjustmentCreated
  | IAdjustmentUpdated
  | IBusinessCreated
  | IBusinessUpdated
  | IBusinessImported
  | ICustomerCreated
  | ICustomerUpdated
  | ICustomerImported
  | IDiscountCreated
  | IDiscountUpdated
  | IDiscountImported
  | IPayoutCreated
  | IPayoutPaid
  | IPriceCreated
  | IPriceUpdated
  | IPriceImported
  | IProductCreated
  | IProductUpdated
  | IProductImported
  | ISubscriptionActivated
  | ISubscriptionCanceled
  | ISubscriptionCreated
  | ISubscriptionImported
  | ISubscriptionPastDue
  | ISubscriptionPaused
  | ISubscriptionResumed
  | ISubscriptionTrialing
  | ISubscriptionUpdated
  | ITransactionBilled
  | ITransactionCanceled
  | ITransactionCompleted
  | ITransactionCreated
  | ITransactionPaid
  | ITransactionPastDue
  | ITransactionPaymentFailed
  | ITransactionReady
  | ITransactionUpdated
  | IReportCreated
  | IReportUpdated;
