/**
 *  ! Autogenerated code !
 *  Do not make changes to this file.
 *  Changes may be overwritten as part of auto-generation.
 */

import { AdjustmentCollection, Adjustment } from '../../entities';
import { type ErrorResponse, type Response } from '../../internal';
import { BaseResource, QueryParameters } from '../../internal/base';
import { type CreateAdjustmentRequestBody, type ListAdjustmentQueryParameters } from './operations';
import { type IAdjustmentResponse } from '../../types';

const AdjustmentPaths = {
  list: '/adjustments',
  create: '/adjustments',
} as const;

export * from './operations';

export class AdjustmentsResource extends BaseResource {
  public list(queryParams?: ListAdjustmentQueryParameters): AdjustmentCollection {
    const queryParameters = new QueryParameters(queryParams);
    return new AdjustmentCollection(this.client, AdjustmentPaths.list + queryParameters.toQueryString());
  }

  public async create(createAdjustmentParameters: CreateAdjustmentRequestBody): Promise<Adjustment> {
    const response = await this.client.post<CreateAdjustmentRequestBody, Response<IAdjustmentResponse> | ErrorResponse>(
      AdjustmentPaths.create,
      createAdjustmentParameters,
    );

    const data = this.handleResponse<IAdjustmentResponse>(response);

    return new Adjustment(data);
  }
}
