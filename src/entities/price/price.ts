/**
 *  ! Autogenerated code !
 *  Do not make changes to this file.
 *  Changes may be overwritten as part of auto-generation.
 */

import { type ICustomData, type ISharedPriceResponse } from '../../types';
import { TimePeriod, Money, UnitPriceOverride, PriceQuantity, ImportMeta } from '../index';
import { type TaxMode, type Status, type CatalogType } from '../../enums';

export class Price {
  public readonly id: string;
  public readonly productId: string;
  public readonly description: string;
  public readonly name: string | null;
  public readonly type: CatalogType | null;
  public readonly billingCycle: TimePeriod | null;
  public readonly trialPeriod: TimePeriod | null;
  public readonly taxMode: TaxMode;
  public readonly unitPrice: Money | null;
  public readonly unitPriceOverrides: UnitPriceOverride[] | null;
  public readonly quantity: PriceQuantity | null;
  public readonly status: Status;
  public readonly customData: ICustomData | null;
  public readonly importMeta: ImportMeta | null;

  constructor(price: ISharedPriceResponse) {
    this.id = price.id;
    this.productId = price.product_id;
    this.description = price.description;
    this.type = price.type ?? null;
    this.name = price.name ? price.name : null;
    this.billingCycle = price.billing_cycle ? new TimePeriod(price.billing_cycle) : null;
    this.trialPeriod = price.trial_period ? new TimePeriod(price.trial_period) : null;
    this.taxMode = price.tax_mode;
    this.unitPrice = price.unit_price ? new Money(price.unit_price) : null;
    this.unitPriceOverrides = price.unit_price_overrides
      ? price.unit_price_overrides?.map((unit_price_override) => new UnitPriceOverride(unit_price_override))
      : null;
    this.quantity = price.quantity ? new PriceQuantity(price.quantity) : null;
    this.status = price.status;
    this.customData = price.custom_data ? price.custom_data : null;
    this.importMeta = price.import_meta ? new ImportMeta(price.import_meta) : null;
  }
}
